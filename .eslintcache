[{"C:\\Users\\Sandro\\Desktop\\omedia_task\\src\\index.js":"1","C:\\Users\\Sandro\\Desktop\\omedia_task\\src\\App.js":"2","C:\\Users\\Sandro\\Desktop\\omedia_task\\src\\components\\Searchbox.js":"3","C:\\Users\\Sandro\\Desktop\\omedia_task\\src\\services\\github_api.js":"4","C:\\Users\\Sandro\\Desktop\\omedia_task\\src\\components\\UserList.js":"5","C:\\Users\\Sandro\\Desktop\\omedia_task\\src\\components\\UserGrid.js":"6","C:\\Users\\Sandro\\Desktop\\omedia_task\\src\\components\\UserPage.js":"7"},{"size":331,"mtime":1609859089367,"results":"8","hashOfConfig":"9"},{"size":6710,"mtime":1609862582758,"results":"10","hashOfConfig":"9"},{"size":785,"mtime":1609861535849,"results":"11","hashOfConfig":"9"},{"size":1874,"mtime":1609863029211,"results":"12","hashOfConfig":"9"},{"size":2103,"mtime":1609859188542,"results":"13","hashOfConfig":"9"},{"size":2220,"mtime":1609859111060,"results":"14","hashOfConfig":"9"},{"size":3754,"mtime":1609859317667,"results":"15","hashOfConfig":"9"},{"filePath":"16","messages":"17","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"18"},"1htjz7f",{"filePath":"19","messages":"20","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"21","usedDeprecatedRules":"18"},{"filePath":"22","messages":"23","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"18"},{"filePath":"24","messages":"25","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"26","messages":"27","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"18"},{"filePath":"28","messages":"29","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"18"},{"filePath":"30","messages":"31","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"18"},"C:\\Users\\Sandro\\Desktop\\omedia_task\\src\\index.js",[],["32","33"],"C:\\Users\\Sandro\\Desktop\\omedia_task\\src\\App.js",["34","35","36"],"//The main APP component which holds all state and lifecycle methods\r\n\r\nimport React, { useEffect, useState } from 'react';\r\nimport Searchbox from './components/Searchbox';\r\nimport UserList from \"./components/UserList\"\r\nimport UserGrid from \"./components/UserGrid\"\r\nimport UserPage from \"./components/UserPage\"\r\nimport { requestAll, requestRepo, requestUser, requestOrg } from \"./services/github_api.js\";\r\nimport { BrowserRouter as Router, Route, Switch } from \"react-router-dom\";\r\n\r\nconst App = () => {\r\n\r\n    //STATE ------------------------------------------------------------------\r\n\r\n    //State that holds what is being curently typed in the searchbar\r\n    const [search, setSearch] = useState(\"\");\r\n\r\n    //State that holds which user are we searching for\r\n    const [user, setUser] = useState([]);\r\n\r\n    //State for the searched user's 3 repos\r\n    const [userRepo, setUserRepo] = useState([]);\r\n\r\n    //State for the searched user's Organisation info\r\n    const [userOrg, setUserOrg] = useState([]);\r\n\r\n    //State that knows whether the information about one specific user is being displayed\r\n    //It is mainly used as a dependancy in useEffect hooks. Upon changing this state, the information\r\n    //Regarding the user is loaded in relevant states - user, userRepo and userOrg\r\n    const [showUser, setShowUser] = useState(false);\r\n\r\n    //Loads the Avatar, Login and Type for the most popular users, to be displayed on home page - either\r\n    //as a list or as a grid\r\n    const [list, setList] = useState([]);\r\n\r\n    //Loads the 3 most recent repos of the most popular users, to be displayed on home page - either \r\n    //as a lsit or as a grid\r\n    const [repos, setRepos] = useState([]);\r\n\r\n    //Triggers Grid view or List view\r\n    const [showGrid, setShowGrid] = useState(false);\r\n\r\n    //State responsible for showing the search history\r\n    const [history, setHistory] = useState([]);\r\n\r\n\r\n    //LIFECYCLE METHODS ---------------------------------------------------\r\n\r\n    //loads the Avatar, Login and Type info from Github API using an axios request, that's\r\n    //defined in a separate file\r\n    useEffect(() => {\r\n        let userList = [];\r\n        requestAll()\r\n            .then(res => {\r\n                userList = res.data.items\r\n                setList(userList);\r\n            });\r\n    }, [])\r\n\r\n    //loads the Repository info from Github API using an axios request, that's\r\n    //defined in a separate file\r\n    useEffect(() => {\r\n        let repoArray = [];\r\n        list.map(item => {\r\n            return requestRepo(item.login)\r\n                .then(res => repoArray = repoArray.concat([[res.data[0], res.data[1], res.data[2]]]))\r\n                .then(() => setRepos(repoArray))\r\n        })\r\n    }, [list])\r\n\r\n    ////loads the specific user info from Github API using an axios request, that's\r\n    //defined in a separate file. This info is then displayed on the separate user page\r\n    useEffect(() => {\r\n        requestUser(search)\r\n            .then(res => {\r\n                setUser(res.data)\r\n                localStorage.setItem(\"selected-user\", JSON.stringify(res.data));\r\n            })\r\n            .catch(() => {\r\n                setUser(\"NOT FOUND\")\r\n            })\r\n    }, [showUser])\r\n\r\n    //loads the specific user --repository-- info from Github API using an axios request, that's\r\n    //defined in a separate file. This info is then displayed on the separate user page\r\n    useEffect(() => {\r\n        requestRepo(search)\r\n            .then(res => {\r\n                setUserRepo(res.data)\r\n                localStorage.setItem(\"selected-repo\", JSON.stringify(res.data))\r\n            })\r\n            .catch(() => {\r\n                setUserRepo(\"NOT FOUND\")\r\n            })\r\n    }, [showUser])\r\n\r\n    //loads the specific user --organisation-- info from Github API using an axios request, that's\r\n    //defined in a separate file. This info is then displayed on the separate user page\r\n    useEffect(() => {\r\n        requestOrg(search)\r\n            .then(res => {\r\n                setUserOrg(res.data)\r\n                localStorage.setItem(\"selected-org\", JSON.stringify(res.data))\r\n                console.log(res.data);\r\n            })\r\n            .catch(() => {\r\n                setUserOrg(\"NOT FOUND\")\r\n            })\r\n    }, [showUser])\r\n\r\n\r\n    //Loads the search history from localStorage, if the information exists there\r\n    useEffect(() => {\r\n        let hist = JSON.parse(localStorage.getItem(\"history\"))\r\n        if (!hist) {\r\n            setHistory([])\r\n        } else {\r\n            setHistory(hist)\r\n        }\r\n    }, [])\r\n\r\n    //Uploads search terms to localStorage\r\n    useEffect(() => {\r\n        localStorage.setItem('history', JSON.stringify(history))\r\n    }, [history])\r\n\r\n    return (\r\n        <>\r\n            <Router>\r\n                {/* The Searchbox component is available in all views of the app */}\r\n                <Searchbox\r\n                    search={search}\r\n                    setSearch={setSearch}\r\n                    setShowUser={setShowUser}\r\n                    showUser={showUser}\r\n                    setHistory={setHistory}\r\n                />\r\n                <Switch>\r\n                    <Route exact path=\"/\">\r\n                        <button onClick={() => {\r\n                            setShowGrid(prev => !prev)\r\n                        }}>{showGrid === false ? \"GRID VIEW\" : \"LIST VIEW\"}</button>\r\n                        {history.length > 0 ? <div>\r\n                            Search History:\r\n                                <span className=\"history\">{history[history.length - 1]}</span>\r\n                            <span className=\"history\">{history[history.length - 2]}</span>\r\n                            <span className=\"history\">{history[history.length - 3]}</span>\r\n                        </div> : null}\r\n                        {showGrid ?\r\n                            // List and Grid views\r\n                            < UserGrid\r\n                                list={list}\r\n                                repos={repos} /> :\r\n                            <UserList\r\n                                list={list}\r\n                                repos={repos}\r\n                            />}\r\n                    </Route>\r\n                    <Route path={`/${search}`}>\r\n                        {/* User Page view */}\r\n                        <UserPage\r\n                            user={user}\r\n                            userRepo={userRepo}\r\n                            search={search}\r\n                            userOrg={userOrg}\r\n                        />\r\n                    </Route>\r\n                </Switch>\r\n            </Router>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default App;","C:\\Users\\Sandro\\Desktop\\omedia_task\\src\\components\\Searchbox.js",[],"C:\\Users\\Sandro\\Desktop\\omedia_task\\src\\services\\github_api.js",[],"C:\\Users\\Sandro\\Desktop\\omedia_task\\src\\components\\UserList.js",[],"C:\\Users\\Sandro\\Desktop\\omedia_task\\src\\components\\UserGrid.js",[],"C:\\Users\\Sandro\\Desktop\\omedia_task\\src\\components\\UserPage.js",[],{"ruleId":"37","replacedBy":"38"},{"ruleId":"39","replacedBy":"40"},{"ruleId":"41","severity":1,"message":"42","line":82,"column":8,"nodeType":"43","endLine":82,"endColumn":18,"suggestions":"44"},{"ruleId":"41","severity":1,"message":"42","line":95,"column":8,"nodeType":"43","endLine":95,"endColumn":18,"suggestions":"45"},{"ruleId":"41","severity":1,"message":"42","line":109,"column":8,"nodeType":"43","endLine":109,"endColumn":18,"suggestions":"46"},"no-native-reassign",["47"],"no-negated-in-lhs",["48"],"react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'search'. Either include it or remove the dependency array.","ArrayExpression",["49"],["50"],["51"],"no-global-assign","no-unsafe-negation",{"desc":"52","fix":"53"},{"desc":"52","fix":"54"},{"desc":"52","fix":"55"},"Update the dependencies array to be: [search, showUser]",{"range":"56","text":"57"},{"range":"58","text":"57"},{"range":"59","text":"57"},[3225,3235],"[search, showUser]",[3736,3746],[4285,4295]]